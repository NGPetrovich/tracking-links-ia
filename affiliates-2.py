import pandas as pd
import pickle

internal_affiliate_id=5

# shared variable between affiliate-2.py and affiliate-3.py
with open('variable.pkl', 'wb') as file:
    pickle.dump(internal_affiliate_id, file)

# this specific name is generated by affiliates-1.py
file_path = './processed_data.csv'
df = pd.read_csv(file_path)

# Function to calculate subtotals for each Site ID and insert them
def insert_subtotals(df):
    result = pd.DataFrame()
    for site_id, group in df.groupby('Site ID'):
        subtotal = group.sum(numeric_only=True)
        subtotal['Site Name'] = group['Site Name'].iloc[0]  # Use the first site name in the group
        subtotal['Username'] = 'Subtotal'  # Set 'Subtotal' for username in subtotal rows
        subtotal['Affiliate ID'] = group['Affiliate ID'].iloc[0]  # Use the first Affiliate ID in the group
        subtotal['Site ID'] = site_id  # Keep the Site ID for subtotal rows
        result = pd.concat([result, group, subtotal.to_frame().T])
    return result

# Create dataframe for part that includes internal campaigns
affiliate_data = df[df['Affiliate ID'] == internal_affiliate_id]

# Calculate and insert subtotals selected dataframe
result_with_subtotals = insert_subtotals(affiliate_data).reset_index(drop=True)

# Combine internal dataframe (with subtotals) with the rest
non_internal_data = df[df['Affiliate ID'] != internal_affiliate_id]
combined_data = pd.concat([result_with_subtotals, non_internal_data], ignore_index=True)

# Sort by Site ID and Affiliate ID to keep subtotal rows at the end of each group
combined_data.sort_values(by=['Site ID', 'Affiliate ID'], key=lambda x: x.map({'Subtotal': 1}).fillna(0), inplace=True)

output_path = './subtotals_part_1.csv'
combined_data.to_csv(output_path, index=False)

print("Processed data saved to", output_path)